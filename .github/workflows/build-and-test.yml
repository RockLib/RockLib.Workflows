name: Shared Build and Test Workflow

####################################################################################################
##  WORKFLOW TRIGGER
####################################################################################################
on:
  # Workflow will run when called by another workflow.
  workflow_call:

####################################################################################################
##  WORKFLOW JOBS
####################################################################################################
jobs:
  # build_and_test job builds and runs unit tests for each of the target frameworks of the solution.
  build_and_test:
    name: Build and test projects
    # Using the latest Windows GitHub-hosted runner.
    runs-on: windows-latest

    steps:
      # Using Github checkout action to retrieve the codebase.
      - name: Fetch code
        uses: actions/checkout@v3

      # Using dotnet build to build the solution.
      - name: Build
        run: dotnet build --configuration Release

      # Using dotnet test to run any unit tests found in the project.
      # If any test fails, the job and workflow will fail.
      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal

      # Using GitHub upload-artifact action to persist the workspace for the next job.
      - name: Upload workspace
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: ./

  # Calls snyk-exclusion reusable workflow.
  snyk_exclusions:
    name: Snyk exclusions
    # This job will not run until build_and_test is complete and passes.
    needs: build_and_test
    uses: ./.github/workflows/snyk-exclusions.yml

  # snyk_test job runs scan against project dependencies, looking for vulnerabilities.
  snyk_test:
    name: Snyk test
    # This job will not run until snyk_exclusions job finishes successfully.
    needs: snyk_exclusions
    # Using the latest Ubuntu GitHub-hosted runner.
    runs-on: ubuntu-latest
    
    steps:
      # Using GitHub download-artifact action to get the workspace from the last job.
      - name: Download workspace
        uses: actions/download-artifact@v3
        with:
          name: workspace

      # Using Snyk provided action for dotnet projects.
      - name: Run Snyk test
        uses: snyk/actions/dotnet@master
        env:
          # Uses SNYK_TOKEN from org secrets
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --exclude=${{ needs.snyk_exclusions.outputs.scan_exclusions }}
