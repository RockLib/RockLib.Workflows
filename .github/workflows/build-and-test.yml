name: Shared Build and Test Workflow

####################################################################################################
##  WORKFLOW TRIGGER
####################################################################################################
on:
  # Workflow will run when called by another workflow.
  workflow_call:

####################################################################################################
##  WORKFLOW JOBS
####################################################################################################
jobs:
  # build_and_test job builds and runs unit tests, and searches for exclusions from Snyk scans.
  build_and_test:
    name: Build and test projects
    # Using the latest Windows GitHub-hosted runner.
    runs-on: windows-latest
    # Creates output variables to be used in other jobs.
    outputs: 
      SNYK_EXCLUSIONS: ${{ steps.snyk-exclusions.outputs.SNYK_EXCLUSIONS }}

    steps:
      # Using Github checkout action to retrieve the pull request codebase.
      - name: Fetch code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      # Using dotnet build to build the solution.
      - name: Build
        run: dotnet build --configuration Release

      # Using dotnet test to run any unit tests found in the project.
      # If any test fails, the job and workflow will fail.
      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal

      # Creates a comma separated list of directories or files to exclude from Snyk scans.
      - name: Find test or example project(s) to exclude from Snyk
        id: snyk-exclusions
        shell: pwsh
        run: |
          # Filter to only Test and Example projects and add them to snykExclusions.
          $snykExclusions = Get-ChildItem -Directory | Select-Object Name
          $snykExclusions = $snykExclusions | Where-Object { ($_ -Match 'Tests') -or ($_ -Match 'Example') }
          $snykExclusions = $snykExclusions | ConvertTo-CSV -UseQuotes Never -NoTypeInformation | Select-Object -Skip 1
          $snykExclusions = $snykExclusions -join ','
          echo "snyk exclusions - $snykExclusions"

          # Set output.
          echo "SNYK_EXCLUSIONS=$snykExclusions" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      # Using GitHub upload-artifact action to persist the workspace for the next job.
      - name: Upload workspace
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: ./

  # snyk_test job runs scan against project dependencies, looking for vulnerabilities.
  snyk_test:
    name: Snyk test
    # This job will not run until build_and_test job finishes successfully.
    needs: build_and_test
    # Using the latest Ubuntu GitHub-hosted runner.
    runs-on: ubuntu-latest

    steps:
      # Using GitHub download-artifact action to get the workspace from the last job.
      - name: Download workspace
        uses: actions/download-artifact@v3
        with:
          name: workspace

      # Using Snyk provided action for dotnet projects.
      - name: Run Snyk test
        uses: snyk/actions/dotnet@master
        env:
          # Uses SNYK_TOKEN from org secrets
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --exclude=${{ needs.build_and_test.outputs.SNYK_EXCLUSIONS }}
